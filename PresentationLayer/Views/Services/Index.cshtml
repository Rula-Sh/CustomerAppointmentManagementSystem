@model IEnumerable<ServiceViewModel>

@{
    ViewData["Title"] = "Services";
}
<div class="d-flex justify-content-between mb-4 mt-4">
    <h1>Services</h1>

    <a class="btn btn-primary align-self-center" asp-action="Add">
        <i class="bi bi-plus"></i>
        Add Service
    </a>
</div>

@if (!Model.Any())
{
    <h2>
        <i class="bi bi-exclamation-triangle"></i>
        No Services Available
    </h2>
}
else
{
    <div class="row">
        @foreach (var service in Model) // using for each on @model Service will cause a problem, i need to use @model IEnumerable<Service> to etirate over each service
        {
            <div class="col-12 mb-3 card border-2 rounded-4">

                <div class="row gy-3">
                    <div class="card-body d-flex flex-column justify-content-between">

                        <a class=" text-black link-underline link-underline-opacity-0" asp-action="Details" asp-route-id="@service.Id">
                            <div>
                                <div class="d-flex justify-content-between mb-2">
                                    <h3 class="card-title">@service.Name Service</h3>
                                    <h6><strong>Price: </strong>@service.Price JD</h6>
                                </div>
                                <div class="mb-2">
                                    <strong>Available in:</strong>
                                    @string.Join(" - ", service.DateTimeSlotGroups.Select(a => a.Date))
                                    @* @foreach (var availability in service.DateTimeSlotGroups) *@
                                    @* { *@
                                    @*     <span>@availability.Date -- </span> *@
                                    @* } *@
                                </div>
                                <strong class="d-block">Description:</strong>
                                <p> @service.Description</p>
                            </div>
                        </a>
                        <div class="d-flex justify-content-end flex">
                            <a asp-action="Details" asp-route-id="@service.Id" class="btn btn-outline-secondary me-1">
                                @* asp-route-id="@service.Id" used to select the service*@
                                <i class="bi bi-list-ul"></i>
                                Details
                            </a>
                            @* <a asp-action="Edit" asp-route-id="@service.Id" class="btn btn-outline-primary js-edit"> *@
                            <a href="javascript:;" data-id="@service.Id" class="btn btn-outline-primary js-edit">
                                <i class="bi bi-pencil"></i>
                                Edit
                            </a>
                            <a href="javascript:;" class="btn btn-danger js-delete ms-1" data-id="@service.Id">
                                <i class="bi bi-trash"></i>
                                Delete
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    @*     <a asp-action="Index" asp-controller="Home" class="btn btn-outline-secondary mt-4 "> *@
    @*         <i class="bi bi-arrow-left"></i> *@
    @*         Go Back *@
    @*     </a> *@
}


@section Scripts {
    <script>
        $(document).ready(function () {

            $('.js-edit').on('click', function () {
                var btn = $(this);
                var serviceId = btn.data('id');
                console.log(btn.data('id'));

                $.ajax({
                    url: '/services/edit/' + btn.data('id'),
                    success: function (response) {
                        if (!response.success) {
                             window.location.href = '/services/edit/' + serviceId;
                        } else {
                            toastr.error(response.message);
                        }
                    },
                    error: function (err) {
                        toastr.error("An unexpected error occurred.");
                    }
                });
            });

            $('.js-delete').on('click', function () { //select when the user clicks on delete
                var btn = $(this);

                console.log(btn.data('id')); //to show deleted service id
                //https://bootboxjs.com/examples.html
                bootbox.confirm({ // show a confirmation box to delete
                    message: "Are you sure that you need to delete this service?",
                    buttons: {
                        confirm: {
                            label: 'Yes',
                            className: 'btn-danger' //btn-success makes the button color green
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-outline-secondary' // btn-outline-secondary makes the button color red , btn-outline-secondary makes it look white with grey border
                        }
                    },
                    callback: function (result) {
                        //var result = confirm('Are you sure that you need to delete this service?'); // before the bootbox
                        if (result) {
                            $.ajax({ // $.ajax is a jQuery function used to perform an asynchronous HTTP (Ajax) request. Ajax allows you to send and receive data from a server without reloading the entire web page. This is particularly useful for creating dynamic and interactive web applications.
                                url: '/services/delete/' + btn.data('id'),
                                type: 'DELETE',
                                success: function (response) {
                                    if (response.success) {

                                        var serviceContainer = btn.parents('.col-12'); //parents is the card which its id is .col-12
                                        // was with .fadeOut(); at the end
                                       serviceContainer.addClass('animate__animated animate__zoomOut');
                                        // from adding animate.css package, https://animate.style/

                                        setTimeout(function () {
                                           serviceContainer.remove(); // to remove the card after deleting, this code alone causes the deleting animation to disapear instantly, thats why i used setTimeout()
                                        }, 1000); //1s

                                        toastr.success(response.message);

                                     } else {
                                        toastr.error(response.message); // "Cannot Delete a Service with Active Appointments."
                                     }
                                },
                                error: function (err) {
                                    toastr.error("An unexpected error occurred.");
                                }
                            });
                        }
                    }
                });
            });
        });
    </script>
}