@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        @if (UserManager.GetUserAsync(User).Result.ProfilePicture != null)
        {
            <li class="nav-item">
                <img class=" avatar rounded-circle" alt="profile picture" src="data:image/*;base64,@(Convert.ToBase64String(UserManager.GetUserAsync(User).Result.ProfilePicture))" />
            </li>
        }
        <li class="nav-item align-content-center m-2">
            <a class="notification border-0 position-relative" data-toggle="popover" title="Notifications">
                <i class="bi bi-bell-fill h4 text-black"></i>
                <span id="notificationAlert" class="position-absolute bottom-50 start-50  bg-danger border border-light rounded-circle w-100 h-100 text-center text-white">
                    <span id="notificationCount" class="smallText"></span>
                    @* <span class="visually-hidden">New alerts</span> *@
                </span>
            </a>
        </li>

        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
