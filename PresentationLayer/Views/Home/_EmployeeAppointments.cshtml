@model IEnumerable<AppointmentViewModel>

@{
    ViewData["Title"] = "appointments";
}
<div class="d-flex justify-content-between mb-4 mt-4">
    <h1>Active Appointments</h1>

    <a class="btn btn-primary align-self-center" asp-action="PendingAppointments">
        <i class="bi bi-calendar-event"></i>
        Pending Appointments
    </a>
</div>

@{
    var approvedAppointments = Model.Where(a => a.Status == "Approved").ToList();
}

@if (!approvedAppointments.Any())
{
    <h2>
        <i class="bi bi-exclamation-triangle"></i>
        No Appointments booked yet
    </h2>
}
else
{
    <div class="row">

        <table class="table table-striped mt-4">
            <thead>
                <tr>
                    <th> Service </th>
                    <th> Customer </th>
                    <th> Date </th>
                    <th> Actions</th>
                </tr>
            </thead>
            <tbody class="pendingAppointments">
                @foreach (var appointment in Model)
                {
                    if (appointment.Status == "Approved")
                    {
                        <tr>
                            <a class="text-black link-underline link-underline-opacity-0" asp-action="Details" asp-route-id="Id">

                            <td>@appointment.Name</td>
                            <td>@appointment.CustomerName</td>
                            <td>@appointment.Date</td>

                            </a>
                            <td>
                                <a href="javascript:;" class="btn btn-success js-complete ms-1" data-id="@appointment.Id">
                                    Finish
                                    <i class="bi bi-check"></i>
                                </a>
                            </td>
                        </tr>

                    }

                }
            </tbody>
        </table>
    </div>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

@* //moved to the index.cshtml file in order to be functional*@
@* <script> *@
@*     $(document).ready(function () { *@
@*         $('.js-complete').on('click', function () { *@
@*             var btn = $(this); *@

@*             console.log(btn.data('id')); *@
@*             bootbox.prompt({ *@
@*                 title: "This is a prompt, vertically centered!", *@
@*                 centerVertical: true, *@
@*                 callback: function(result){ *@
@*                     $.ajax({ // $.ajax is a jQuery function used to perform an asynchronous HTTP (Ajax) request. Ajax allows you to send and receive data from a server without reloading the entire web page. This is particularly useful for creating dynamic and interactive web applications. *@
@*                         url: '/Home/Complete', *@
@*                         type: 'POST', *@
@*                         data: { 'id' : btn.data('id'), 'notes' : result }, *@
@*                         success: function () { *@
@*                             var postContainer = btn.parents('.pendingAppointments'); *@
@*                             postContainer.addClass('animate__animated animate__zoomOut'); *@

@*                             setTimeout(function () { *@
@*                                 postContainer.remove(); *@
@*                             }, 1000); *@

@*                             toastr.success('Appointment Completed'); *@
@*                         }, *@
@*                         error: function () { *@
@*                             toastr.error('Something went wrong!'); *@
@*                         } *@
@*                     }); *@
@*                 } *@
@*              }); *@
@*         }); *@
@*     }); *@
@* </script> *@
}
