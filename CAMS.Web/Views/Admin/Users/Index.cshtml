@model IEnumerable<UserViewModel>
@{
    ViewData["Title"] = "Users";
}

<!-- Page Header Start -->
<div class="container-fluid page-header py-5 mb-5">
    <div class="container py-5">
        <h1 class="display-3 text-white mb-3 animated slideInDown"><span class="text-primary">Users</span></h1>
        <nav aria-label="breadcrumb animated slideInDown">
            <ol class="breadcrumb animated slideInDown">
                <a asp-action="Index" asp-controller="Home" class="breadcrumb-item text-white active"> Home </a>
                <a asp-action="Index" asp-controller="Users" class="breadcrumb-item text-white active"> Users </a>
            </ol>
        </nav>
    </div>
</div>
<!-- Page Header End -->
<div class="d-flex justify-content-end">
    <a class="btn btn-primary text-white rounded-3 p-1 ps-2 pe-2" asp-action="AddProvider">
        <i class="bi bi-person-plus-fill h4 m-1 align-middle text-white"></i> Add Povider
    </a>
</div>
<table id="usersTable" class="table table-striped mt-4">
    <thead>
        <tr class="bg-primary text-white">
            <th>Full Name</th>
            <th>Email</th>
            <th>Roles</th>
            <th>Last Activity</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody></tbody>
    @* <tbody> *@
    @*     @foreach (var user in Model) *@
    @*     { *@
    @*         <tr class="@(user.IsActive ? "" : "inactive-row")"> *@
    @*             <td class="@(user.Roles.Contains("Admin") ? "text-danger" : user.Roles.Contains("Customer")? "text-success" : "text-info" )">@user.FullName</td> *@
    @*             <td>@user.Email</td> *@
    @*             <td class="Role">@string.Join(" , ", user.Roles)</td> @*Join() is used to join a list of strings with a separator between them*@
    @*             <td>@user.LastActivity</td> *@
    @*             <td> *@
    @*                 @if (user.Id != 1) *@
    @*                 { *@
    @*                     @* if the user role is customer show the hire button, else show the fire button*@
    @*                     @* <a class="btn btn-primary" asp-controller="Users" asp-action="Hire" asp-route-userId="@user.Id">Hire</a> *@
    @*                     <a href="javascript:;" class="btn btn-primary js-hire" data-id="@user.Id" @(user.Roles.Contains("Customer") ? "" : "hidden")>Hire</a> *@
    @*                     <a href="javascript:;" class="btn btn-danger js-fire" data-id="@user.Id" @(user.Roles.Contains("Customer") ? "hidden" : "")>Fire</a> *@

    @*                     @* if the user IsActive show the Deactivate button, else show the Activate button*@
    @*                     @* <a class="btn btn-danger" asp-controller="Users" asp-action="changeAccountActivity" asp-route-userId="@user.Id">Deactivate</a> *@
    @*                     <a href="javascript:;" class="btn btn-warning js-deactivate" data-id="@user.Id" @(user.IsActive ? "" : "hidden")>Deactivate</a> *@
    @*                     @* <a class="btn btn-success" asp-controller="Users" asp-action="changeAccountActivity" asp-route-userId="@user.Id">Activate</a> *@
    @*                     <a href="javascript:;" class="btn btn-success js-activate" data-id="@user.Id" @(user.IsActive ? "hidden" : "")>Activate</a> *@
    @*                 } *@
    @*             </td> *@
    @*         </tr> *@
    @*     } *@
    @* </tbody> *@
</table>


@section Scripts {
    <script>
        $(document).ready(function (){
            if ($("#usersTable").length) {
                const tableId = '#usersTable';
                if ($.fn.DataTable.isDataTable(tableId)) {
                    $(tableId).DataTable().clear().destroy();
                }
                $(tableId).DataTable({

                    "ajax": {
                        "url": "Home/LoadUsers",
                        "type": "POST",
                        "datatype": "json"
                    },

                    "columns": [
                        { "data": "fullName", "name": "fullName", "autoWidth": "10%", "className": "text-center",
                            "render": function (data, type, row) {
                                var cssClass = "text-info"; // default
                                if (row.roles && row.roles.indexOf("Admin") !== -1) {
                                    cssClass = "text-danger"; // as admin
                                } else if (row.roles && row.roles.indexOf("Customer") !== -1) {
                                    cssClass = "text-success"; // as customer
                                }

                                return '<span class="' + cssClass + '">' + data + '</span>';
                            }
                        },
                        { "data": "email", "name": "email", "autoWidth": "20%", "className": "text-center" },
                        { "data": "roles", "name": "roles", "autoWidth": "10%", "className": "text-center" },
                        { "data": "lastActivity", "name": "lastActivity", "autoWidth": "10%", "className": "text-center" },
                        {
                            data: null,
                            render: function(data, type, row) {
                                var actions = '';

                                if(row.id != 1)
                                {
                                    var isCustomer = row.roles && row.roles.indexOf("Customer") !== -1;
                                    var isActive = row.isActive;

                                    actions += '<a href="javascript:;" class="btn btn-primary js-hire ms-1 me-1" data-id="' + row.id + '" '+ (isCustomer ? "" : "hidden") + '>Hire</a>';
                                    actions += '<a href="javascript:;" class="btn btn-danger js-fire ms-1 me-1" data-id="' + row.id + '" '+ (isCustomer ? "hidden" : "") + '>Fire</a>';

                                    actions += '<a href="javascript:;" class="btn btn-warning js-deactivate ms-1 me-1" data-id="' + row.id + '" '+ (isActive ? "" : "hidden") + '>Deactivate</a>';
                                    actions += '<a href="javascript:;" class="btn btn-success js-activate ms-1 me-1" data-id="' + row.id + '" '+ (isActive ? "hidden" : "") + '>Activate</a>';
                                }
                                return actions;
                            },
                        },
                    ],
                    "drawCallback": function () {
                            $('.js-hire').on('click', function(){
                            console.log("inside hire function");
                            var btn = $(this);
                            $.ajax({
                                url: '/Users/ChangeAccountEmployement?id=' + btn.data('id')+
                                                                                '&from=' + encodeURIComponent('Customer') +
                                                                                '&to=' + encodeURIComponent('Provider'),
                                method: 'POST',
                                success: function(result){
                                    if(result.success){
                                    console.log("hire success");

                                    toastr.success('Provider Hired');

                                    btn.parents('tr').find('.Role').text("Provider");

                                    btn.prop('hidden', true);
                                    btn.siblings('.js-fire').prop('hidden', false);

                                    } else{
                                        toastr.error(result.message);
                                    }

                                },
                                error: function(error){
                                    alert('Something went wrong');
                                },
                            });
                        });

                        $('.js-fire').on('click', function(){
                            console.log("inside fire function");
                            var btn = $(this);
                            bootbox.confirm({
                                message: "Are you sure you want to fire this user?",
                                buttons: {
                                    confirm: {
                                        label: 'Yes',
                                        className: 'btn-danger'
                                    },
                                    cancel: {
                                        label: 'No',
                                        className: 'btn-secondary'
                                    }
                                },
                                callback: function (result) {
                                    if(result){
                                        $.ajax({
                                            url: '/Users/ChangeAccountEmployement?id=' + btn.data('id')+
                                                                                '&from=' + encodeURIComponent('Provider') +
                                                                                '&to=' + encodeURIComponent('Customer'),
                                            method: 'POST',
                                            success: function(result){
                                                if(result.success){
                                                    console.log("fire success");
                                                    toastr.error("User Fired");

                                                    btn.parents('tr').find('.Role').text("Customer");

                                                    btn.prop('hidden', true);
                                                    btn.siblings('.js-hire').prop('hidden', false);
                                                } else{
                                                    toastr.error(result.message);
                                                }
                                            },
                                            error: function(error){
                                                alert('Something went wrong');
                                            },
                                        });
                                    }
                                }
                            });
                        });

                        $('.js-deactivate').on('click', function(){
                            console.log("inside deactivate function");
                            var btn = $(this);
                            bootbox.confirm({
                                message: "Are you sure you want to deactivate this user?",
                                buttons: {
                                    confirm: {
                                        label: 'Yes',
                                        className: 'btn-danger'
                                    },
                                    cancel: {
                                        label: 'No',
                                        className: 'btn-secondary'
                                    }
                                },
                                callback: function (result) {
                                    if(result){
                                        $.ajax({
                                            url: '/users/changeAccountActivity?id=' + btn.data('id'),
                                            method: 'POST',
                                            success: function(){
                                                console.log("deactivate success");
                                                btn.closest('tr').removeClass('active-row');
                                                btn.closest('tr').addClass('inactive-row');

                                                btn.prop('hidden', true);
                                                btn.siblings('.js-activate').prop('hidden', false);

                                            },
                                            error: function(error){
                                                alert('Something went wrong');
                                            },
                                        });
                                    }
                                }
                            });
                        });

                        $('.js-activate').on('click', function(){
                            console.log("inside activate function");
                            var btn = $(this);
                            $.ajax({
                                url: '/users/changeAccountActivity?id=' + btn.data('id'),
                                method: 'POST',
                                success: function(){
                                    console.log("activate success");

                                    btn.closest('tr').addClass('active-row');
                                        btn.closest('tr').removeClass('inactive-row');

                                    btn.prop('hidden', true);
                                    btn.siblings('.js-deactivate').prop('hidden', false);
                                },
                                error: function(error){
                                    alert('Something went wrong');
                                },
                            });
                        });
                    }
                });
            }
        });
    </script>
}
